# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AssignTagInput {
  tagId: Int!
  testCaseId: Int!
}

type AuthMutationResponse {
  data: AuthResponse
  isValid: Boolean!
  message: String!
}

type AuthResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

input CreateTagInput {
  color: String
  name: String!
}

input CreateTestCaseInput {
  actualResult: String
  description: String
  expectedResult: String!
  steps: String!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type File {
  createdAt: DateTime!
  filename: String!
  id: Int!
  mimeType: String!
  path: String!
  size: Int!
  testCase: TestCase!
  testCaseId: Int!
  uploadedBy: Int!
  uploader: User!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  assignTag(assignTagInput: AssignTagInput!): TagAssignMutationResponse!
  createTag(createTagInput: CreateTagInput!): TagMutationResponse!
  createTestCase(createTestCaseInput: CreateTestCaseInput!): TestCaseMutationResponse!
  deleteTag(id: Int!): TagMutationResponse!
  deleteTestCase(id: Int!): TestCaseMutationResponse!
  login(loginInput: LoginInput!): AuthMutationResponse!
  refreshToken(refreshTokenInput: RefreshTokenInput!): AuthMutationResponse!
  signUp(signUpInput: SignUpInput!): AuthMutationResponse!
  unassignTag(tagId: Int!, testCaseId: Int!): TagAssignMutationResponse!
  updateTag(updateTagInput: UpdateTagInput!): TagMutationResponse!
  updateTestCase(updateTestCaseInput: UpdateTestCaseInput!): TestCaseMutationResponse!
}

type Query {
  file(id: Int!): File!
  files: [File!]!
  filesByTestCase(testCaseId: Int!): [File!]!
  me: User!
  tag(id: Int!): Tag
  tags: [Tag!]!
  tagsByTestCase(testCaseId: Int!): [Tag!]!
  testCase(id: Int!): TestCase
  testCases: [TestCase!]!
}

input RefreshTokenInput {
  oldAccessToken: String!
  refreshToken: String!
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
}

type Tag {
  color: String
  createdAt: DateTime!
  id: Int!
  name: String!
}

type TagAssignMutationResponse {
  data: Boolean
  isValid: Boolean!
  message: String!
}

type TagMutationResponse {
  data: Tag
  isValid: Boolean!
  message: String!
}

type TestCase {
  actualResult: String
  createdAt: DateTime!
  createdBy: User!
  createdById: Int!
  description: String
  expectedResult: String!
  files: [File!]
  id: Int!
  status: String!
  steps: String!
  tags: [Tag!]
  title: String!
  updatedAt: DateTime!
}

type TestCaseMutationResponse {
  data: TestCase
  isValid: Boolean!
  message: String!
}

input UpdateTagInput {
  color: String
  id: Int!
  name: String
}

input UpdateTestCaseInput {
  actualResult: String
  description: String
  expectedResult: String
  id: Int!
  status: String
  steps: String
  title: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
  updatedAt: DateTime!
}
